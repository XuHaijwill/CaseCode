<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">


	<!-- 通过构造方法来配置bean的属性 -->
	<bean id="car" class="com.xhjc.ioc.helloworld.Car">
		<constructor-arg value="Audi" index="0"></constructor-arg>
		<constructor-arg value="ShangHai" index="1"></constructor-arg>
		<constructor-arg value="300000" type="float"></constructor-arg>
	</bean>

	<!-- 使用构造器注入属性值可以指定参数的位置和参数的类型！以区分重载的构造器！ -->
	<bean id="car2" class="com.xhjc.ioc.helloworld.Car">
		<constructor-arg value="Baoma" type="java.lang.String"></constructor-arg>
		<!-- 如果字面值包含特殊字符可以使用<![CDATA[]]>包裹起来 -->
		<!-- 属性值也可以使用value子节点进行配置 -->
		<constructor-arg type="java.lang.String">
			<value><![CDATA[<ShangHai^>]]></value>
		</constructor-arg>
		<constructor-arg type="int">
			<value>250</value>
		</constructor-arg>
	</bean>

	<!-- 测试如何配置集合属性 -->
	<bean id="person" class="com.xhjc.ioc.collections.Person">
		<property name="name" value="Mike"></property>
		<property name="age" value="27"></property>
		<property name="cars">
			<!-- 使用list节点为List类型的属性赋值 -->
			<list>
				<ref bean="car" />
				<ref bean="car2" />
				<!-- 使用内部bean -->
				<bean class="com.xhjc.ioc.helloworld.Car">
					<constructor-arg value="Ford" index="0"></constructor-arg>
					<constructor-arg value="Changan" index="1"></constructor-arg>
					<constructor-arg value="200000.00"  type="float"></constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- 配置Map属性值 -->
	<bean id="newPerson" class="com.xhjc.ioc.collections.NewPerson">
		<property name="name" value="Rose"></property>
		<property name="age" value="28"></property>
		<property name="cars">
			<!-- 使用map节点及map的entry子节点配置Map类型的成员变量 -->
			<map>
				<entry key="AAA" value-ref="car"></entry>
				<entry key="BBB" value-ref="car2"></entry>
			</map>
		</property>
	</bean>
	
	<!-- 配置 Properties属性值 -->
	<bean id="dataSource" class="com.xhjc.ioc.bean.DataSources">
		<property name="properties">
			<!-- 使用props和prop子节点来为Properties属性赋值 -->
			<props>
				<prop key="user">root</prop>
				<prop key="password">123</prop>
				<prop key="jdbcUrl">jdbc:mysql:///test</prop>
				<prop key="driverClass">com.mysql.jdbc.Driver</prop>
			</props>
		</property>
	</bean>
	
	
</beans>
